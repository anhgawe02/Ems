'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2463
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class DSQT_DataSet
    Inherits DataSet
    
    Private tableBao_Cao_Doanh_Thu As Bao_Cao_Doanh_ThuDataTable
    
    Private tableBao_Cao_Doanh_Thu_Cuoc_VCMBND As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Bao_Cao_Doanh_Thu")) Is Nothing) Then
                Me.Tables.Add(New Bao_Cao_Doanh_ThuDataTable(ds.Tables("Bao_Cao_Doanh_Thu")))
            End If
            If (Not (ds.Tables("Bao_Cao_Doanh_Thu_Cuoc_VCMBND")) Is Nothing) Then
                Me.Tables.Add(New Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable(ds.Tables("Bao_Cao_Doanh_Thu_Cuoc_VCMBND")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Bao_Cao_Doanh_Thu As Bao_Cao_Doanh_ThuDataTable
        Get
            Return Me.tableBao_Cao_Doanh_Thu
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Bao_Cao_Doanh_Thu_Cuoc_VCMBND As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable
        Get
            Return Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As DSQT_DataSet = CType(MyBase.Clone,DSQT_DataSet)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("Bao_Cao_Doanh_Thu")) Is Nothing) Then
            Me.Tables.Add(New Bao_Cao_Doanh_ThuDataTable(ds.Tables("Bao_Cao_Doanh_Thu")))
        End If
        If (Not (ds.Tables("Bao_Cao_Doanh_Thu_Cuoc_VCMBND")) Is Nothing) Then
            Me.Tables.Add(New Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable(ds.Tables("Bao_Cao_Doanh_Thu_Cuoc_VCMBND")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableBao_Cao_Doanh_Thu = CType(Me.Tables("Bao_Cao_Doanh_Thu"),Bao_Cao_Doanh_ThuDataTable)
        If (Not (Me.tableBao_Cao_Doanh_Thu) Is Nothing) Then
            Me.tableBao_Cao_Doanh_Thu.InitVars
        End If
        Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND = CType(Me.Tables("Bao_Cao_Doanh_Thu_Cuoc_VCMBND"),Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable)
        If (Not (Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND) Is Nothing) Then
            Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "DSQT_DataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSQT_DataSet.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableBao_Cao_Doanh_Thu = New Bao_Cao_Doanh_ThuDataTable
        Me.Tables.Add(Me.tableBao_Cao_Doanh_Thu)
        Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND = New Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable
        Me.Tables.Add(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND)
    End Sub
    
    Private Function ShouldSerializeBao_Cao_Doanh_Thu() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeBao_Cao_Doanh_Thu_Cuoc_VCMBND() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub Bao_Cao_Doanh_ThuRowChangeEventHandler(ByVal sender As Object, ByVal e As Bao_Cao_Doanh_ThuRowChangeEvent)
    
    Public Delegate Sub Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEventHandler(ByVal sender As Object, ByVal e As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Bao_Cao_Doanh_ThuDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTen_Nuoc As DataColumn
        
        Private columnSo_Luong_D As DataColumn
        
        Private columnSo_Luong_M As DataColumn
        
        Private columnCong_Phat_D As DataColumn
        
        Private columnCong_Phat_M As DataColumn
        
        Private columnMa_Tien_Te As DataColumn
        
        Private columnKhoi_Luong_D As DataColumn
        
        Private columnKhoi_Luong_M As DataColumn
        
        Private columnCuoc_VCMBND As DataColumn
        
        Private columnCuoc_Khoi_Luong As DataColumn
        
        Private columnTong_Doanh_Thu_VND As DataColumn
        
        Friend Sub New()
            MyBase.New("Bao_Cao_Doanh_Thu")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property Ten_NuocColumn As DataColumn
            Get
                Return Me.columnTen_Nuoc
            End Get
        End Property
        
        Friend ReadOnly Property So_Luong_DColumn As DataColumn
            Get
                Return Me.columnSo_Luong_D
            End Get
        End Property
        
        Friend ReadOnly Property So_Luong_MColumn As DataColumn
            Get
                Return Me.columnSo_Luong_M
            End Get
        End Property
        
        Friend ReadOnly Property Cong_Phat_DColumn As DataColumn
            Get
                Return Me.columnCong_Phat_D
            End Get
        End Property
        
        Friend ReadOnly Property Cong_Phat_MColumn As DataColumn
            Get
                Return Me.columnCong_Phat_M
            End Get
        End Property
        
        Friend ReadOnly Property Ma_Tien_TeColumn As DataColumn
            Get
                Return Me.columnMa_Tien_Te
            End Get
        End Property
        
        Friend ReadOnly Property Khoi_Luong_DColumn As DataColumn
            Get
                Return Me.columnKhoi_Luong_D
            End Get
        End Property
        
        Friend ReadOnly Property Khoi_Luong_MColumn As DataColumn
            Get
                Return Me.columnKhoi_Luong_M
            End Get
        End Property
        
        Friend ReadOnly Property Cuoc_VCMBNDColumn As DataColumn
            Get
                Return Me.columnCuoc_VCMBND
            End Get
        End Property
        
        Friend ReadOnly Property Cuoc_Khoi_LuongColumn As DataColumn
            Get
                Return Me.columnCuoc_Khoi_Luong
            End Get
        End Property
        
        Friend ReadOnly Property Tong_Doanh_Thu_VNDColumn As DataColumn
            Get
                Return Me.columnTong_Doanh_Thu_VND
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As Bao_Cao_Doanh_ThuRow
            Get
                Return CType(Me.Rows(index),Bao_Cao_Doanh_ThuRow)
            End Get
        End Property
        
        Public Event Bao_Cao_Doanh_ThuRowChanged As Bao_Cao_Doanh_ThuRowChangeEventHandler
        
        Public Event Bao_Cao_Doanh_ThuRowChanging As Bao_Cao_Doanh_ThuRowChangeEventHandler
        
        Public Event Bao_Cao_Doanh_ThuRowDeleted As Bao_Cao_Doanh_ThuRowChangeEventHandler
        
        Public Event Bao_Cao_Doanh_ThuRowDeleting As Bao_Cao_Doanh_ThuRowChangeEventHandler
        
        Public Overloads Sub AddBao_Cao_Doanh_ThuRow(ByVal row As Bao_Cao_Doanh_ThuRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddBao_Cao_Doanh_ThuRow(ByVal Ten_Nuoc As String, ByVal So_Luong_D As Integer, ByVal So_Luong_M As Integer, ByVal Cong_Phat_D As Single, ByVal Cong_Phat_M As Single, ByVal Ma_Tien_Te As String, ByVal Khoi_Luong_D As Integer, ByVal Khoi_Luong_M As Integer, ByVal Cuoc_VCMBND As Single, ByVal Cuoc_Khoi_Luong As Single, ByVal Tong_Doanh_Thu_VND As Integer) As Bao_Cao_Doanh_ThuRow
            Dim rowBao_Cao_Doanh_ThuRow As Bao_Cao_Doanh_ThuRow = CType(Me.NewRow,Bao_Cao_Doanh_ThuRow)
            rowBao_Cao_Doanh_ThuRow.ItemArray = New Object() {Ten_Nuoc, So_Luong_D, So_Luong_M, Cong_Phat_D, Cong_Phat_M, Ma_Tien_Te, Khoi_Luong_D, Khoi_Luong_M, Cuoc_VCMBND, Cuoc_Khoi_Luong, Tong_Doanh_Thu_VND}
            Me.Rows.Add(rowBao_Cao_Doanh_ThuRow)
            Return rowBao_Cao_Doanh_ThuRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As Bao_Cao_Doanh_ThuDataTable = CType(MyBase.Clone,Bao_Cao_Doanh_ThuDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New Bao_Cao_Doanh_ThuDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTen_Nuoc = Me.Columns("Ten_Nuoc")
            Me.columnSo_Luong_D = Me.Columns("So_Luong_D")
            Me.columnSo_Luong_M = Me.Columns("So_Luong_M")
            Me.columnCong_Phat_D = Me.Columns("Cong_Phat_D")
            Me.columnCong_Phat_M = Me.Columns("Cong_Phat_M")
            Me.columnMa_Tien_Te = Me.Columns("Ma_Tien_Te")
            Me.columnKhoi_Luong_D = Me.Columns("Khoi_Luong_D")
            Me.columnKhoi_Luong_M = Me.Columns("Khoi_Luong_M")
            Me.columnCuoc_VCMBND = Me.Columns("Cuoc_VCMBND")
            Me.columnCuoc_Khoi_Luong = Me.Columns("Cuoc_Khoi_Luong")
            Me.columnTong_Doanh_Thu_VND = Me.Columns("Tong_Doanh_Thu_VND")
        End Sub
        
        Private Sub InitClass()
            Me.columnTen_Nuoc = New DataColumn("Ten_Nuoc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTen_Nuoc)
            Me.columnSo_Luong_D = New DataColumn("So_Luong_D", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSo_Luong_D)
            Me.columnSo_Luong_M = New DataColumn("So_Luong_M", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSo_Luong_M)
            Me.columnCong_Phat_D = New DataColumn("Cong_Phat_D", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCong_Phat_D)
            Me.columnCong_Phat_M = New DataColumn("Cong_Phat_M", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCong_Phat_M)
            Me.columnMa_Tien_Te = New DataColumn("Ma_Tien_Te", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMa_Tien_Te)
            Me.columnKhoi_Luong_D = New DataColumn("Khoi_Luong_D", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKhoi_Luong_D)
            Me.columnKhoi_Luong_M = New DataColumn("Khoi_Luong_M", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKhoi_Luong_M)
            Me.columnCuoc_VCMBND = New DataColumn("Cuoc_VCMBND", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuoc_VCMBND)
            Me.columnCuoc_Khoi_Luong = New DataColumn("Cuoc_Khoi_Luong", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuoc_Khoi_Luong)
            Me.columnTong_Doanh_Thu_VND = New DataColumn("Tong_Doanh_Thu_VND", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_Doanh_Thu_VND)
        End Sub
        
        Public Function NewBao_Cao_Doanh_ThuRow() As Bao_Cao_Doanh_ThuRow
            Return CType(Me.NewRow,Bao_Cao_Doanh_ThuRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New Bao_Cao_Doanh_ThuRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(Bao_Cao_Doanh_ThuRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Bao_Cao_Doanh_ThuRowChangedEvent) Is Nothing) Then
                RaiseEvent Bao_Cao_Doanh_ThuRowChanged(Me, New Bao_Cao_Doanh_ThuRowChangeEvent(CType(e.Row,Bao_Cao_Doanh_ThuRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Bao_Cao_Doanh_ThuRowChangingEvent) Is Nothing) Then
                RaiseEvent Bao_Cao_Doanh_ThuRowChanging(Me, New Bao_Cao_Doanh_ThuRowChangeEvent(CType(e.Row,Bao_Cao_Doanh_ThuRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Bao_Cao_Doanh_ThuRowDeletedEvent) Is Nothing) Then
                RaiseEvent Bao_Cao_Doanh_ThuRowDeleted(Me, New Bao_Cao_Doanh_ThuRowChangeEvent(CType(e.Row,Bao_Cao_Doanh_ThuRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Bao_Cao_Doanh_ThuRowDeletingEvent) Is Nothing) Then
                RaiseEvent Bao_Cao_Doanh_ThuRowDeleting(Me, New Bao_Cao_Doanh_ThuRowChangeEvent(CType(e.Row,Bao_Cao_Doanh_ThuRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveBao_Cao_Doanh_ThuRow(ByVal row As Bao_Cao_Doanh_ThuRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Bao_Cao_Doanh_ThuRow
        Inherits DataRow
        
        Private tableBao_Cao_Doanh_Thu As Bao_Cao_Doanh_ThuDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableBao_Cao_Doanh_Thu = CType(Me.Table,Bao_Cao_Doanh_ThuDataTable)
        End Sub
        
        Public Property Ten_Nuoc As String
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.Ten_NuocColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.Ten_NuocColumn) = value
            End Set
        End Property
        
        Public Property So_Luong_D As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.So_Luong_DColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.So_Luong_DColumn) = value
            End Set
        End Property
        
        Public Property So_Luong_M As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.So_Luong_MColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.So_Luong_MColumn) = value
            End Set
        End Property
        
        Public Property Cong_Phat_D As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.Cong_Phat_DColumn),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.Cong_Phat_DColumn) = value
            End Set
        End Property
        
        Public Property Cong_Phat_M As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.Cong_Phat_MColumn),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.Cong_Phat_MColumn) = value
            End Set
        End Property
        
        Public Property Ma_Tien_Te As String
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.Ma_Tien_TeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.Ma_Tien_TeColumn) = value
            End Set
        End Property
        
        Public Property Khoi_Luong_D As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.Khoi_Luong_DColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.Khoi_Luong_DColumn) = value
            End Set
        End Property
        
        Public Property Khoi_Luong_M As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.Khoi_Luong_MColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.Khoi_Luong_MColumn) = value
            End Set
        End Property
        
        Public Property Cuoc_VCMBND As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.Cuoc_VCMBNDColumn),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.Cuoc_VCMBNDColumn) = value
            End Set
        End Property
        
        Public Property Cuoc_Khoi_Luong As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.Cuoc_Khoi_LuongColumn),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.Cuoc_Khoi_LuongColumn) = value
            End Set
        End Property
        
        Public Property Tong_Doanh_Thu_VND As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu.Tong_Doanh_Thu_VNDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu.Tong_Doanh_Thu_VNDColumn) = value
            End Set
        End Property
        
        Public Function IsTen_NuocNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.Ten_NuocColumn)
        End Function
        
        Public Sub SetTen_NuocNull()
            Me(Me.tableBao_Cao_Doanh_Thu.Ten_NuocColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSo_Luong_DNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.So_Luong_DColumn)
        End Function
        
        Public Sub SetSo_Luong_DNull()
            Me(Me.tableBao_Cao_Doanh_Thu.So_Luong_DColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSo_Luong_MNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.So_Luong_MColumn)
        End Function
        
        Public Sub SetSo_Luong_MNull()
            Me(Me.tableBao_Cao_Doanh_Thu.So_Luong_MColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCong_Phat_DNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.Cong_Phat_DColumn)
        End Function
        
        Public Sub SetCong_Phat_DNull()
            Me(Me.tableBao_Cao_Doanh_Thu.Cong_Phat_DColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCong_Phat_MNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.Cong_Phat_MColumn)
        End Function
        
        Public Sub SetCong_Phat_MNull()
            Me(Me.tableBao_Cao_Doanh_Thu.Cong_Phat_MColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMa_Tien_TeNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.Ma_Tien_TeColumn)
        End Function
        
        Public Sub SetMa_Tien_TeNull()
            Me(Me.tableBao_Cao_Doanh_Thu.Ma_Tien_TeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsKhoi_Luong_DNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.Khoi_Luong_DColumn)
        End Function
        
        Public Sub SetKhoi_Luong_DNull()
            Me(Me.tableBao_Cao_Doanh_Thu.Khoi_Luong_DColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsKhoi_Luong_MNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.Khoi_Luong_MColumn)
        End Function
        
        Public Sub SetKhoi_Luong_MNull()
            Me(Me.tableBao_Cao_Doanh_Thu.Khoi_Luong_MColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuoc_VCMBNDNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.Cuoc_VCMBNDColumn)
        End Function
        
        Public Sub SetCuoc_VCMBNDNull()
            Me(Me.tableBao_Cao_Doanh_Thu.Cuoc_VCMBNDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuoc_Khoi_LuongNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.Cuoc_Khoi_LuongColumn)
        End Function
        
        Public Sub SetCuoc_Khoi_LuongNull()
            Me(Me.tableBao_Cao_Doanh_Thu.Cuoc_Khoi_LuongColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_Doanh_Thu_VNDNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu.Tong_Doanh_Thu_VNDColumn)
        End Function
        
        Public Sub SetTong_Doanh_Thu_VNDNull()
            Me(Me.tableBao_Cao_Doanh_Thu.Tong_Doanh_Thu_VNDColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Bao_Cao_Doanh_ThuRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As Bao_Cao_Doanh_ThuRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As Bao_Cao_Doanh_ThuRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As Bao_Cao_Doanh_ThuRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnMa_Nuoc As DataColumn
        
        Private columnTen_Nuoc As DataColumn
        
        Private columnKhoi_Luong_Q1 As DataColumn
        
        Private columnCuoc_VCMBND_Q1 As DataColumn
        
        Private columnKhoi_Luong_Q2 As DataColumn
        
        Private columnCuoc_VCMBND_Q2 As DataColumn
        
        Private columnKhoi_Luong_Q3 As DataColumn
        
        Private columnCuoc_VCMBND_Q3 As DataColumn
        
        Private columnKhoi_Luong_Q4 As DataColumn
        
        Private columnCuoc_VCMBND_Q4 As DataColumn
        
        Private columnTong_Nguyen_Te As DataColumn
        
        Private columnTong_VND As DataColumn
        
        Friend Sub New()
            MyBase.New("Bao_Cao_Doanh_Thu_Cuoc_VCMBND")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property Ma_NuocColumn As DataColumn
            Get
                Return Me.columnMa_Nuoc
            End Get
        End Property
        
        Friend ReadOnly Property Ten_NuocColumn As DataColumn
            Get
                Return Me.columnTen_Nuoc
            End Get
        End Property
        
        Friend ReadOnly Property Khoi_Luong_Q1Column As DataColumn
            Get
                Return Me.columnKhoi_Luong_Q1
            End Get
        End Property
        
        Friend ReadOnly Property Cuoc_VCMBND_Q1Column As DataColumn
            Get
                Return Me.columnCuoc_VCMBND_Q1
            End Get
        End Property
        
        Friend ReadOnly Property Khoi_Luong_Q2Column As DataColumn
            Get
                Return Me.columnKhoi_Luong_Q2
            End Get
        End Property
        
        Friend ReadOnly Property Cuoc_VCMBND_Q2Column As DataColumn
            Get
                Return Me.columnCuoc_VCMBND_Q2
            End Get
        End Property
        
        Friend ReadOnly Property Khoi_Luong_Q3Column As DataColumn
            Get
                Return Me.columnKhoi_Luong_Q3
            End Get
        End Property
        
        Friend ReadOnly Property Cuoc_VCMBND_Q3Column As DataColumn
            Get
                Return Me.columnCuoc_VCMBND_Q3
            End Get
        End Property
        
        Friend ReadOnly Property Khoi_Luong_Q4Column As DataColumn
            Get
                Return Me.columnKhoi_Luong_Q4
            End Get
        End Property
        
        Friend ReadOnly Property Cuoc_VCMBND_Q4Column As DataColumn
            Get
                Return Me.columnCuoc_VCMBND_Q4
            End Get
        End Property
        
        Friend ReadOnly Property Tong_Nguyen_TeColumn As DataColumn
            Get
                Return Me.columnTong_Nguyen_Te
            End Get
        End Property
        
        Friend ReadOnly Property Tong_VNDColumn As DataColumn
            Get
                Return Me.columnTong_VND
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow
            Get
                Return CType(Me.Rows(index),Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow)
            End Get
        End Property
        
        Public Event Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChanged As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEventHandler
        
        Public Event Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChanging As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEventHandler
        
        Public Event Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowDeleted As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEventHandler
        
        Public Event Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowDeleting As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEventHandler
        
        Public Overloads Sub AddBao_Cao_Doanh_Thu_Cuoc_VCMBNDRow(ByVal row As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddBao_Cao_Doanh_Thu_Cuoc_VCMBNDRow(ByVal Ma_Nuoc As String, ByVal Ten_Nuoc As String, ByVal Khoi_Luong_Q1 As Single, ByVal Cuoc_VCMBND_Q1 As Single, ByVal Khoi_Luong_Q2 As Single, ByVal Cuoc_VCMBND_Q2 As Single, ByVal Khoi_Luong_Q3 As Single, ByVal Cuoc_VCMBND_Q3 As Single, ByVal Khoi_Luong_Q4 As Single, ByVal Cuoc_VCMBND_Q4 As Single, ByVal Tong_Nguyen_Te As Single, ByVal Tong_VND As Integer) As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow
            Dim rowBao_Cao_Doanh_Thu_Cuoc_VCMBNDRow As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow = CType(Me.NewRow,Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow)
            rowBao_Cao_Doanh_Thu_Cuoc_VCMBNDRow.ItemArray = New Object() {Ma_Nuoc, Ten_Nuoc, Khoi_Luong_Q1, Cuoc_VCMBND_Q1, Khoi_Luong_Q2, Cuoc_VCMBND_Q2, Khoi_Luong_Q3, Cuoc_VCMBND_Q3, Khoi_Luong_Q4, Cuoc_VCMBND_Q4, Tong_Nguyen_Te, Tong_VND}
            Me.Rows.Add(rowBao_Cao_Doanh_Thu_Cuoc_VCMBNDRow)
            Return rowBao_Cao_Doanh_Thu_Cuoc_VCMBNDRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable = CType(MyBase.Clone,Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnMa_Nuoc = Me.Columns("Ma_Nuoc")
            Me.columnTen_Nuoc = Me.Columns("Ten_Nuoc")
            Me.columnKhoi_Luong_Q1 = Me.Columns("Khoi_Luong_Q1")
            Me.columnCuoc_VCMBND_Q1 = Me.Columns("Cuoc_VCMBND_Q1")
            Me.columnKhoi_Luong_Q2 = Me.Columns("Khoi_Luong_Q2")
            Me.columnCuoc_VCMBND_Q2 = Me.Columns("Cuoc_VCMBND_Q2")
            Me.columnKhoi_Luong_Q3 = Me.Columns("Khoi_Luong_Q3")
            Me.columnCuoc_VCMBND_Q3 = Me.Columns("Cuoc_VCMBND_Q3")
            Me.columnKhoi_Luong_Q4 = Me.Columns("Khoi_Luong_Q4")
            Me.columnCuoc_VCMBND_Q4 = Me.Columns("Cuoc_VCMBND_Q4")
            Me.columnTong_Nguyen_Te = Me.Columns("Tong_Nguyen_Te")
            Me.columnTong_VND = Me.Columns("Tong_VND")
        End Sub
        
        Private Sub InitClass()
            Me.columnMa_Nuoc = New DataColumn("Ma_Nuoc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMa_Nuoc)
            Me.columnTen_Nuoc = New DataColumn("Ten_Nuoc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTen_Nuoc)
            Me.columnKhoi_Luong_Q1 = New DataColumn("Khoi_Luong_Q1", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKhoi_Luong_Q1)
            Me.columnCuoc_VCMBND_Q1 = New DataColumn("Cuoc_VCMBND_Q1", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuoc_VCMBND_Q1)
            Me.columnKhoi_Luong_Q2 = New DataColumn("Khoi_Luong_Q2", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKhoi_Luong_Q2)
            Me.columnCuoc_VCMBND_Q2 = New DataColumn("Cuoc_VCMBND_Q2", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuoc_VCMBND_Q2)
            Me.columnKhoi_Luong_Q3 = New DataColumn("Khoi_Luong_Q3", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKhoi_Luong_Q3)
            Me.columnCuoc_VCMBND_Q3 = New DataColumn("Cuoc_VCMBND_Q3", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuoc_VCMBND_Q3)
            Me.columnKhoi_Luong_Q4 = New DataColumn("Khoi_Luong_Q4", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKhoi_Luong_Q4)
            Me.columnCuoc_VCMBND_Q4 = New DataColumn("Cuoc_VCMBND_Q4", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuoc_VCMBND_Q4)
            Me.columnTong_Nguyen_Te = New DataColumn("Tong_Nguyen_Te", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_Nguyen_Te)
            Me.columnTong_VND = New DataColumn("Tong_VND", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_VND)
        End Sub
        
        Public Function NewBao_Cao_Doanh_Thu_Cuoc_VCMBNDRow() As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow
            Return CType(Me.NewRow,Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangedEvent) Is Nothing) Then
                RaiseEvent Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChanged(Me, New Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEvent(CType(e.Row,Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangingEvent) Is Nothing) Then
                RaiseEvent Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChanging(Me, New Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEvent(CType(e.Row,Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowDeletedEvent) Is Nothing) Then
                RaiseEvent Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowDeleted(Me, New Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEvent(CType(e.Row,Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowDeletingEvent) Is Nothing) Then
                RaiseEvent Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowDeleting(Me, New Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEvent(CType(e.Row,Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveBao_Cao_Doanh_Thu_Cuoc_VCMBNDRow(ByVal row As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow
        Inherits DataRow
        
        Private tableBao_Cao_Doanh_Thu_Cuoc_VCMBND As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND = CType(Me.Table,Bao_Cao_Doanh_Thu_Cuoc_VCMBNDDataTable)
        End Sub
        
        Public Property Ma_Nuoc As String
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Ma_NuocColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Ma_NuocColumn) = value
            End Set
        End Property
        
        Public Property Ten_Nuoc As String
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Ten_NuocColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Ten_NuocColumn) = value
            End Set
        End Property
        
        Public Property Khoi_Luong_Q1 As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q1Column),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q1Column) = value
            End Set
        End Property
        
        Public Property Cuoc_VCMBND_Q1 As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q1Column),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q1Column) = value
            End Set
        End Property
        
        Public Property Khoi_Luong_Q2 As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q2Column),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q2Column) = value
            End Set
        End Property
        
        Public Property Cuoc_VCMBND_Q2 As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q2Column),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q2Column) = value
            End Set
        End Property
        
        Public Property Khoi_Luong_Q3 As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q3Column),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q3Column) = value
            End Set
        End Property
        
        Public Property Cuoc_VCMBND_Q3 As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q3Column),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q3Column) = value
            End Set
        End Property
        
        Public Property Khoi_Luong_Q4 As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q4Column),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q4Column) = value
            End Set
        End Property
        
        Public Property Cuoc_VCMBND_Q4 As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q4Column),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q4Column) = value
            End Set
        End Property
        
        Public Property Tong_Nguyen_Te As Single
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Tong_Nguyen_TeColumn),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Tong_Nguyen_TeColumn) = value
            End Set
        End Property
        
        Public Property Tong_VND As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Tong_VNDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Tong_VNDColumn) = value
            End Set
        End Property
        
        Public Function IsMa_NuocNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Ma_NuocColumn)
        End Function
        
        Public Sub SetMa_NuocNull()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Ma_NuocColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTen_NuocNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Ten_NuocColumn)
        End Function
        
        Public Sub SetTen_NuocNull()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Ten_NuocColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsKhoi_Luong_Q1Null() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q1Column)
        End Function
        
        Public Sub SetKhoi_Luong_Q1Null()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q1Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuoc_VCMBND_Q1Null() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q1Column)
        End Function
        
        Public Sub SetCuoc_VCMBND_Q1Null()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q1Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsKhoi_Luong_Q2Null() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q2Column)
        End Function
        
        Public Sub SetKhoi_Luong_Q2Null()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuoc_VCMBND_Q2Null() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q2Column)
        End Function
        
        Public Sub SetCuoc_VCMBND_Q2Null()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsKhoi_Luong_Q3Null() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q3Column)
        End Function
        
        Public Sub SetKhoi_Luong_Q3Null()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q3Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuoc_VCMBND_Q3Null() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q3Column)
        End Function
        
        Public Sub SetCuoc_VCMBND_Q3Null()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q3Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsKhoi_Luong_Q4Null() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q4Column)
        End Function
        
        Public Sub SetKhoi_Luong_Q4Null()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Khoi_Luong_Q4Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuoc_VCMBND_Q4Null() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q4Column)
        End Function
        
        Public Sub SetCuoc_VCMBND_Q4Null()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Cuoc_VCMBND_Q4Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_Nguyen_TeNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Tong_Nguyen_TeColumn)
        End Function
        
        Public Sub SetTong_Nguyen_TeNull()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Tong_Nguyen_TeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_VNDNull() As Boolean
            Return Me.IsNull(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Tong_VNDColumn)
        End Function
        
        Public Sub SetTong_VNDNull()
            Me(Me.tableBao_Cao_Doanh_Thu_Cuoc_VCMBND.Tong_VNDColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As Bao_Cao_Doanh_Thu_Cuoc_VCMBNDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
