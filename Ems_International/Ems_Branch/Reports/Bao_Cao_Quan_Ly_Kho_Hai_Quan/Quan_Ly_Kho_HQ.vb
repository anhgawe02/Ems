'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2407
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class Quan_Ly_Kho_HQ
    Inherits DataSet
    
    Private tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable
    
    Private tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable
    
    Private tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable
    
    Private tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable
    
    Private tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan")) Is Nothing) Then
                Me.Tables.Add(New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable(ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan")))
            End If
            If (Not (ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD")) Is Nothing) Then
                Me.Tables.Add(New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable(ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD")))
            End If
            If (Not (ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan")) Is Nothing) Then
                Me.Tables.Add(New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable(ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan")))
            End If
            If (Not (ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ")) Is Nothing) Then
                Me.Tables.Add(New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable(ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ")))
            End If
            If (Not (ds.Tables("Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan")) Is Nothing) Then
                Me.Tables.Add(New Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable(ds.Tables("Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable
        Get
            Return Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable
        Get
            Return Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable
        Get
            Return Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable
        Get
            Return Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable
        Get
            Return Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As Quan_Ly_Kho_HQ = CType(MyBase.Clone,Quan_Ly_Kho_HQ)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan")) Is Nothing) Then
            Me.Tables.Add(New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable(ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan")))
        End If
        If (Not (ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD")) Is Nothing) Then
            Me.Tables.Add(New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable(ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD")))
        End If
        If (Not (ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan")) Is Nothing) Then
            Me.Tables.Add(New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable(ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan")))
        End If
        If (Not (ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ")) Is Nothing) Then
            Me.Tables.Add(New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable(ds.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ")))
        End If
        If (Not (ds.Tables("Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan")) Is Nothing) Then
            Me.Tables.Add(New Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable(ds.Tables("Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan = CType(Me.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan"),Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable)
        If (Not (Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan) Is Nothing) Then
            Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.InitVars
        End If
        Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD = CType(Me.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD"),Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable)
        If (Not (Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD) Is Nothing) Then
            Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.InitVars
        End If
        Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan = CType(Me.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan"),Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable)
        If (Not (Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan) Is Nothing) Then
            Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.InitVars
        End If
        Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ = CType(Me.Tables("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ"),Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable)
        If (Not (Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ) Is Nothing) Then
            Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.InitVars
        End If
        Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan = CType(Me.Tables("Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan"),Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable)
        If (Not (Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan) Is Nothing) Then
            Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "Quan_Ly_Kho_HQ"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Quan_Ly_Kho_HQ.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan = New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable
        Me.Tables.Add(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan)
        Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD = New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable
        Me.Tables.Add(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD)
        Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan = New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable
        Me.Tables.Add(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan)
        Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ = New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable
        Me.Tables.Add(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ)
        Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan = New Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable
        Me.Tables.Add(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan)
    End Sub
    
    Private Function ShouldSerializeHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEventHandler(ByVal sender As Object, ByVal e As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEvent)
    
    Public Delegate Sub Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEventHandler(ByVal sender As Object, ByVal e As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEvent)
    
    Public Delegate Sub Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEventHandler(ByVal sender As Object, ByVal e As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEvent)
    
    Public Delegate Sub Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEventHandler(ByVal sender As Object, ByVal e As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEvent)
    
    Public Delegate Sub Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEventHandler(ByVal sender As Object, ByVal e As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnPhan_Loai As DataColumn
        
        Private columnTong_So_Den As DataColumn
        
        Private columnTong_So_Roi_HQ As DataColumn
        
        Private columnTong_So_Qua_Giang As DataColumn
        
        Friend Sub New()
            MyBase.New("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property Phan_LoaiColumn As DataColumn
            Get
                Return Me.columnPhan_Loai
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_DenColumn As DataColumn
            Get
                Return Me.columnTong_So_Den
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_Roi_HQColumn As DataColumn
            Get
                Return Me.columnTong_So_Roi_HQ
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_Qua_GiangColumn As DataColumn
            Get
                Return Me.columnTong_So_Qua_Giang
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow
            Get
                Return CType(Me.Rows(index),Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow)
            End Get
        End Property
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChanged As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChanging As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowDeleted As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowDeleting As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEventHandler
        
        Public Overloads Sub AddHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow(ByVal Phan_Loai As String, ByVal Tong_So_Den As Integer, ByVal Tong_So_Roi_HQ As Integer, ByVal Tong_So_Qua_Giang As Integer) As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow
            Dim rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow = CType(Me.NewRow,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow)
            rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow.ItemArray = New Object() {Phan_Loai, Tong_So_Den, Tong_So_Roi_HQ, Tong_So_Qua_Giang}
            Me.Rows.Add(rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow)
            Return rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable = CType(MyBase.Clone,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnPhan_Loai = Me.Columns("Phan_Loai")
            Me.columnTong_So_Den = Me.Columns("Tong_So_Den")
            Me.columnTong_So_Roi_HQ = Me.Columns("Tong_So_Roi_HQ")
            Me.columnTong_So_Qua_Giang = Me.Columns("Tong_So_Qua_Giang")
        End Sub
        
        Private Sub InitClass()
            Me.columnPhan_Loai = New DataColumn("Phan_Loai", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPhan_Loai)
            Me.columnTong_So_Den = New DataColumn("Tong_So_Den", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Den)
            Me.columnTong_So_Roi_HQ = New DataColumn("Tong_So_Roi_HQ", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Roi_HQ)
            Me.columnTong_So_Qua_Giang = New DataColumn("Tong_So_Qua_Giang", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Qua_Giang)
        End Sub
        
        Public Function NewHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow() As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow
            Return CType(Me.NewRow,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangedEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChanged(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangingEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChanging(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowDeletedEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowDeleted(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowDeletingEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowDeleting(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow
        Inherits DataRow
        
        Private tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan = CType(Me.Table,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanDataTable)
        End Sub
        
        Public Property Phan_Loai As String
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Phan_LoaiColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Phan_LoaiColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Den As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_DenColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_DenColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Roi_HQ As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_Roi_HQColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_Roi_HQColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Qua_Giang As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_Qua_GiangColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_Qua_GiangColumn) = value
            End Set
        End Property
        
        Public Function IsPhan_LoaiNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Phan_LoaiColumn)
        End Function
        
        Public Sub SetPhan_LoaiNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Phan_LoaiColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_DenNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_DenColumn)
        End Function
        
        Public Sub SetTong_So_DenNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_DenColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_Roi_HQNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_Roi_HQColumn)
        End Function
        
        Public Sub SetTong_So_Roi_HQNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_Roi_HQColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_Qua_GiangNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_Qua_GiangColumn)
        End Function
        
        Public Sub SetTong_So_Qua_GiangNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_Quan.Tong_So_Qua_GiangColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Thong_QuanRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnPhan_Loai As DataColumn
        
        Private columnTong_So_Den As DataColumn
        
        Private columnTong_So_BP_Phi_MD As DataColumn
        
        Private columnTong_So_Kiem_Hoa As DataColumn
        
        Private columnTong_So_BP_Phi_MD_Soi_May As DataColumn
        
        Private columnTong_So_Kiem_Hoa_Soi_May As DataColumn
        
        Private columnTong_So_Kiem_Hoa_Roi_HQ As DataColumn
        
        Private columnTong_So_Soi_May_Roi_HQ As DataColumn
        
        Friend Sub New()
            MyBase.New("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property Phan_LoaiColumn As DataColumn
            Get
                Return Me.columnPhan_Loai
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_DenColumn As DataColumn
            Get
                Return Me.columnTong_So_Den
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_BP_Phi_MDColumn As DataColumn
            Get
                Return Me.columnTong_So_BP_Phi_MD
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_Kiem_HoaColumn As DataColumn
            Get
                Return Me.columnTong_So_Kiem_Hoa
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_BP_Phi_MD_Soi_MayColumn As DataColumn
            Get
                Return Me.columnTong_So_BP_Phi_MD_Soi_May
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_Kiem_Hoa_Soi_MayColumn As DataColumn
            Get
                Return Me.columnTong_So_Kiem_Hoa_Soi_May
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_Kiem_Hoa_Roi_HQColumn As DataColumn
            Get
                Return Me.columnTong_So_Kiem_Hoa_Roi_HQ
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_Soi_May_Roi_HQColumn As DataColumn
            Get
                Return Me.columnTong_So_Soi_May_Roi_HQ
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow
            Get
                Return CType(Me.Rows(index),Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow)
            End Get
        End Property
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChanged As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChanging As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowDeleted As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowDeleting As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEventHandler
        
        Public Overloads Sub AddHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow(ByVal Phan_Loai As String, ByVal Tong_So_Den As Integer, ByVal Tong_So_BP_Phi_MD As Integer, ByVal Tong_So_Kiem_Hoa As Integer, ByVal Tong_So_BP_Phi_MD_Soi_May As Integer, ByVal Tong_So_Kiem_Hoa_Soi_May As Integer, ByVal Tong_So_Kiem_Hoa_Roi_HQ As Integer, ByVal Tong_So_Soi_May_Roi_HQ As Integer) As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow
            Dim rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow = CType(Me.NewRow,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow)
            rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow.ItemArray = New Object() {Phan_Loai, Tong_So_Den, Tong_So_BP_Phi_MD, Tong_So_Kiem_Hoa, Tong_So_BP_Phi_MD_Soi_May, Tong_So_Kiem_Hoa_Soi_May, Tong_So_Kiem_Hoa_Roi_HQ, Tong_So_Soi_May_Roi_HQ}
            Me.Rows.Add(rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow)
            Return rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable = CType(MyBase.Clone,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnPhan_Loai = Me.Columns("Phan_Loai")
            Me.columnTong_So_Den = Me.Columns("Tong_So_Den")
            Me.columnTong_So_BP_Phi_MD = Me.Columns("Tong_So_BP_Phi_MD")
            Me.columnTong_So_Kiem_Hoa = Me.Columns("Tong_So_Kiem_Hoa")
            Me.columnTong_So_BP_Phi_MD_Soi_May = Me.Columns("Tong_So_BP_Phi_MD_Soi_May")
            Me.columnTong_So_Kiem_Hoa_Soi_May = Me.Columns("Tong_So_Kiem_Hoa_Soi_May")
            Me.columnTong_So_Kiem_Hoa_Roi_HQ = Me.Columns("Tong_So_Kiem_Hoa_Roi_HQ")
            Me.columnTong_So_Soi_May_Roi_HQ = Me.Columns("Tong_So_Soi_May_Roi_HQ")
        End Sub
        
        Private Sub InitClass()
            Me.columnPhan_Loai = New DataColumn("Phan_Loai", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPhan_Loai)
            Me.columnTong_So_Den = New DataColumn("Tong_So_Den", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Den)
            Me.columnTong_So_BP_Phi_MD = New DataColumn("Tong_So_BP_Phi_MD", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_BP_Phi_MD)
            Me.columnTong_So_Kiem_Hoa = New DataColumn("Tong_So_Kiem_Hoa", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Kiem_Hoa)
            Me.columnTong_So_BP_Phi_MD_Soi_May = New DataColumn("Tong_So_BP_Phi_MD_Soi_May", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_BP_Phi_MD_Soi_May)
            Me.columnTong_So_Kiem_Hoa_Soi_May = New DataColumn("Tong_So_Kiem_Hoa_Soi_May", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Kiem_Hoa_Soi_May)
            Me.columnTong_So_Kiem_Hoa_Roi_HQ = New DataColumn("Tong_So_Kiem_Hoa_Roi_HQ", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Kiem_Hoa_Roi_HQ)
            Me.columnTong_So_Soi_May_Roi_HQ = New DataColumn("Tong_So_Soi_May_Roi_HQ", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Soi_May_Roi_HQ)
        End Sub
        
        Public Function NewHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow() As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow
            Return CType(Me.NewRow,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangedEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChanged(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangingEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChanging(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowDeletedEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowDeleted(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowDeletingEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowDeleting(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow
        Inherits DataRow
        
        Private tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD = CType(Me.Table,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDDataTable)
        End Sub
        
        Public Property Phan_Loai As String
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Phan_LoaiColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Phan_LoaiColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Den As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_DenColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_DenColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_BP_Phi_MD As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_BP_Phi_MDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_BP_Phi_MDColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Kiem_Hoa As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_HoaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_HoaColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_BP_Phi_MD_Soi_May As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_BP_Phi_MD_Soi_MayColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_BP_Phi_MD_Soi_MayColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Kiem_Hoa_Soi_May As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_Hoa_Soi_MayColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_Hoa_Soi_MayColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Kiem_Hoa_Roi_HQ As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_Hoa_Roi_HQColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_Hoa_Roi_HQColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Soi_May_Roi_HQ As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Soi_May_Roi_HQColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Soi_May_Roi_HQColumn) = value
            End Set
        End Property
        
        Public Function IsPhan_LoaiNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Phan_LoaiColumn)
        End Function
        
        Public Sub SetPhan_LoaiNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Phan_LoaiColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_DenNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_DenColumn)
        End Function
        
        Public Sub SetTong_So_DenNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_DenColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_BP_Phi_MDNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_BP_Phi_MDColumn)
        End Function
        
        Public Sub SetTong_So_BP_Phi_MDNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_BP_Phi_MDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_Kiem_HoaNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_HoaColumn)
        End Function
        
        Public Sub SetTong_So_Kiem_HoaNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_HoaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_BP_Phi_MD_Soi_MayNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_BP_Phi_MD_Soi_MayColumn)
        End Function
        
        Public Sub SetTong_So_BP_Phi_MD_Soi_MayNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_BP_Phi_MD_Soi_MayColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_Kiem_Hoa_Soi_MayNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_Hoa_Soi_MayColumn)
        End Function
        
        Public Sub SetTong_So_Kiem_Hoa_Soi_MayNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_Hoa_Soi_MayColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_Kiem_Hoa_Roi_HQNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_Hoa_Roi_HQColumn)
        End Function
        
        Public Sub SetTong_So_Kiem_Hoa_Roi_HQNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Kiem_Hoa_Roi_HQColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_Soi_May_Roi_HQNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Soi_May_Roi_HQColumn)
        End Function
        
        Public Sub SetTong_So_Soi_May_Roi_HQNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MD.Tong_So_Soi_May_Roi_HQColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Kiem_Quan_Hang_Phi_MDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnPhan_Loai As DataColumn
        
        Private columnTong_So_Den As DataColumn
        
        Private columnTong_So_BP_Phi_MD As DataColumn
        
        Private columnTong_So_Kiem_Hoa As DataColumn
        
        Private columnTong_So_Chua_Thong_Quan As DataColumn
        
        Friend Sub New()
            MyBase.New("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property Phan_LoaiColumn As DataColumn
            Get
                Return Me.columnPhan_Loai
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_DenColumn As DataColumn
            Get
                Return Me.columnTong_So_Den
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_BP_Phi_MDColumn As DataColumn
            Get
                Return Me.columnTong_So_BP_Phi_MD
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_Kiem_HoaColumn As DataColumn
            Get
                Return Me.columnTong_So_Kiem_Hoa
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_Chua_Thong_QuanColumn As DataColumn
            Get
                Return Me.columnTong_So_Chua_Thong_Quan
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow
            Get
                Return CType(Me.Rows(index),Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow)
            End Get
        End Property
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChanged As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChanging As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowDeleted As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowDeleting As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEventHandler
        
        Public Overloads Sub AddHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow(ByVal Phan_Loai As String, ByVal Tong_So_Den As Integer, ByVal Tong_So_BP_Phi_MD As Integer, ByVal Tong_So_Kiem_Hoa As Integer, ByVal Tong_So_Chua_Thong_Quan As Integer) As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow
            Dim rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow = CType(Me.NewRow,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow)
            rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow.ItemArray = New Object() {Phan_Loai, Tong_So_Den, Tong_So_BP_Phi_MD, Tong_So_Kiem_Hoa, Tong_So_Chua_Thong_Quan}
            Me.Rows.Add(rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow)
            Return rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable = CType(MyBase.Clone,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnPhan_Loai = Me.Columns("Phan_Loai")
            Me.columnTong_So_Den = Me.Columns("Tong_So_Den")
            Me.columnTong_So_BP_Phi_MD = Me.Columns("Tong_So_BP_Phi_MD")
            Me.columnTong_So_Kiem_Hoa = Me.Columns("Tong_So_Kiem_Hoa")
            Me.columnTong_So_Chua_Thong_Quan = Me.Columns("Tong_So_Chua_Thong_Quan")
        End Sub
        
        Private Sub InitClass()
            Me.columnPhan_Loai = New DataColumn("Phan_Loai", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPhan_Loai)
            Me.columnTong_So_Den = New DataColumn("Tong_So_Den", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Den)
            Me.columnTong_So_BP_Phi_MD = New DataColumn("Tong_So_BP_Phi_MD", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_BP_Phi_MD)
            Me.columnTong_So_Kiem_Hoa = New DataColumn("Tong_So_Kiem_Hoa", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Kiem_Hoa)
            Me.columnTong_So_Chua_Thong_Quan = New DataColumn("Tong_So_Chua_Thong_Quan", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_Chua_Thong_Quan)
        End Sub
        
        Public Function NewHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow() As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow
            Return CType(Me.NewRow,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangedEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChanged(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangingEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChanging(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowDeletedEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowDeleted(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowDeletingEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowDeleting(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow
        Inherits DataRow
        
        Private tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan = CType(Me.Table,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanDataTable)
        End Sub
        
        Public Property Phan_Loai As String
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Phan_LoaiColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Phan_LoaiColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Den As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_DenColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_DenColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_BP_Phi_MD As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_BP_Phi_MDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_BP_Phi_MDColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Kiem_Hoa As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_Kiem_HoaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_Kiem_HoaColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_Chua_Thong_Quan As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_Chua_Thong_QuanColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_Chua_Thong_QuanColumn) = value
            End Set
        End Property
        
        Public Function IsPhan_LoaiNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Phan_LoaiColumn)
        End Function
        
        Public Sub SetPhan_LoaiNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Phan_LoaiColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_DenNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_DenColumn)
        End Function
        
        Public Sub SetTong_So_DenNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_DenColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_BP_Phi_MDNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_BP_Phi_MDColumn)
        End Function
        
        Public Sub SetTong_So_BP_Phi_MDNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_BP_Phi_MDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_Kiem_HoaNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_Kiem_HoaColumn)
        End Function
        
        Public Sub SetTong_So_Kiem_HoaNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_Kiem_HoaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_Chua_Thong_QuanNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_Chua_Thong_QuanColumn)
        End Function
        
        Public Sub SetTong_So_Chua_Thong_QuanNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_Quan.Tong_So_Chua_Thong_QuanColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Ty_Le_Mo_To_Khai_Chua_Thong_QuanRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnM_Phan_Loai As DataColumn
        
        Private columnD_Phan_Loai As DataColumn
        
        Private columnM_Ton_Dau_Ky As DataColumn
        
        Private columnD_Ton_Dau_Ky As DataColumn
        
        Private columnM_Tong_So_Den As DataColumn
        
        Private columnD_Tong_So_Den As DataColumn
        
        Private columnM_Tong_So_Di As DataColumn
        
        Private columnD_Tong_So_Di As DataColumn
        
        Private columnM_Ton_Cuoi_Ky As DataColumn
        
        Private columnD_Ton_Cuoi_Ky As DataColumn
        
        Friend Sub New()
            MyBase.New("Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property M_Phan_LoaiColumn As DataColumn
            Get
                Return Me.columnM_Phan_Loai
            End Get
        End Property
        
        Friend ReadOnly Property D_Phan_LoaiColumn As DataColumn
            Get
                Return Me.columnD_Phan_Loai
            End Get
        End Property
        
        Friend ReadOnly Property M_Ton_Dau_KyColumn As DataColumn
            Get
                Return Me.columnM_Ton_Dau_Ky
            End Get
        End Property
        
        Friend ReadOnly Property D_Ton_Dau_KyColumn As DataColumn
            Get
                Return Me.columnD_Ton_Dau_Ky
            End Get
        End Property
        
        Friend ReadOnly Property M_Tong_So_DenColumn As DataColumn
            Get
                Return Me.columnM_Tong_So_Den
            End Get
        End Property
        
        Friend ReadOnly Property D_Tong_So_DenColumn As DataColumn
            Get
                Return Me.columnD_Tong_So_Den
            End Get
        End Property
        
        Friend ReadOnly Property M_Tong_So_DiColumn As DataColumn
            Get
                Return Me.columnM_Tong_So_Di
            End Get
        End Property
        
        Friend ReadOnly Property D_Tong_So_DiColumn As DataColumn
            Get
                Return Me.columnD_Tong_So_Di
            End Get
        End Property
        
        Friend ReadOnly Property M_Ton_Cuoi_KyColumn As DataColumn
            Get
                Return Me.columnM_Ton_Cuoi_Ky
            End Get
        End Property
        
        Friend ReadOnly Property D_Ton_Cuoi_KyColumn As DataColumn
            Get
                Return Me.columnD_Ton_Cuoi_Ky
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow
            Get
                Return CType(Me.Rows(index),Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow)
            End Get
        End Property
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChanged As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChanging As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowDeleted As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEventHandler
        
        Public Event Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowDeleting As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEventHandler
        
        Public Overloads Sub AddHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow(ByVal M_Phan_Loai As String, ByVal D_Phan_Loai As String, ByVal M_Ton_Dau_Ky As Integer, ByVal D_Ton_Dau_Ky As Integer, ByVal M_Tong_So_Den As Integer, ByVal D_Tong_So_Den As Integer, ByVal M_Tong_So_Di As Integer, ByVal D_Tong_So_Di As Integer, ByVal M_Ton_Cuoi_Ky As Integer, ByVal D_Ton_Cuoi_Ky As Integer) As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow
            Dim rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow = CType(Me.NewRow,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow)
            rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow.ItemArray = New Object() {M_Phan_Loai, D_Phan_Loai, M_Ton_Dau_Ky, D_Ton_Dau_Ky, M_Tong_So_Den, D_Tong_So_Den, M_Tong_So_Di, D_Tong_So_Di, M_Ton_Cuoi_Ky, D_Ton_Cuoi_Ky}
            Me.Rows.Add(rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow)
            Return rowHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable = CType(MyBase.Clone,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnM_Phan_Loai = Me.Columns("M_Phan_Loai")
            Me.columnD_Phan_Loai = Me.Columns("D_Phan_Loai")
            Me.columnM_Ton_Dau_Ky = Me.Columns("M_Ton_Dau_Ky")
            Me.columnD_Ton_Dau_Ky = Me.Columns("D_Ton_Dau_Ky")
            Me.columnM_Tong_So_Den = Me.Columns("M_Tong_So_Den")
            Me.columnD_Tong_So_Den = Me.Columns("D_Tong_So_Den")
            Me.columnM_Tong_So_Di = Me.Columns("M_Tong_So_Di")
            Me.columnD_Tong_So_Di = Me.Columns("D_Tong_So_Di")
            Me.columnM_Ton_Cuoi_Ky = Me.Columns("M_Ton_Cuoi_Ky")
            Me.columnD_Ton_Cuoi_Ky = Me.Columns("D_Ton_Cuoi_Ky")
        End Sub
        
        Private Sub InitClass()
            Me.columnM_Phan_Loai = New DataColumn("M_Phan_Loai", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnM_Phan_Loai)
            Me.columnD_Phan_Loai = New DataColumn("D_Phan_Loai", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnD_Phan_Loai)
            Me.columnM_Ton_Dau_Ky = New DataColumn("M_Ton_Dau_Ky", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnM_Ton_Dau_Ky)
            Me.columnD_Ton_Dau_Ky = New DataColumn("D_Ton_Dau_Ky", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnD_Ton_Dau_Ky)
            Me.columnM_Tong_So_Den = New DataColumn("M_Tong_So_Den", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnM_Tong_So_Den)
            Me.columnD_Tong_So_Den = New DataColumn("D_Tong_So_Den", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnD_Tong_So_Den)
            Me.columnM_Tong_So_Di = New DataColumn("M_Tong_So_Di", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnM_Tong_So_Di)
            Me.columnD_Tong_So_Di = New DataColumn("D_Tong_So_Di", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnD_Tong_So_Di)
            Me.columnM_Ton_Cuoi_Ky = New DataColumn("M_Ton_Cuoi_Ky", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnM_Ton_Cuoi_Ky)
            Me.columnD_Ton_Cuoi_Ky = New DataColumn("D_Ton_Cuoi_Ky", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnD_Ton_Cuoi_Ky)
        End Sub
        
        Public Function NewHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow() As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow
            Return CType(Me.NewRow,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangedEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChanged(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangingEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChanging(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowDeletedEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowDeleted(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowDeletingEvent) Is Nothing) Then
                RaiseEvent Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowDeleting(Me, New Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEvent(CType(e.Row,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow
        Inherits DataRow
        
        Private tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ = CType(Me.Table,Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQDataTable)
        End Sub
        
        Public Property M_Phan_Loai As String
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Phan_LoaiColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Phan_LoaiColumn) = value
            End Set
        End Property
        
        Public Property D_Phan_Loai As String
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Phan_LoaiColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Phan_LoaiColumn) = value
            End Set
        End Property
        
        Public Property M_Ton_Dau_Ky As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Ton_Dau_KyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Ton_Dau_KyColumn) = value
            End Set
        End Property
        
        Public Property D_Ton_Dau_Ky As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Ton_Dau_KyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Ton_Dau_KyColumn) = value
            End Set
        End Property
        
        Public Property M_Tong_So_Den As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Tong_So_DenColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Tong_So_DenColumn) = value
            End Set
        End Property
        
        Public Property D_Tong_So_Den As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Tong_So_DenColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Tong_So_DenColumn) = value
            End Set
        End Property
        
        Public Property M_Tong_So_Di As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Tong_So_DiColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Tong_So_DiColumn) = value
            End Set
        End Property
        
        Public Property D_Tong_So_Di As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Tong_So_DiColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Tong_So_DiColumn) = value
            End Set
        End Property
        
        Public Property M_Ton_Cuoi_Ky As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Ton_Cuoi_KyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Ton_Cuoi_KyColumn) = value
            End Set
        End Property
        
        Public Property D_Ton_Cuoi_Ky As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Ton_Cuoi_KyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Ton_Cuoi_KyColumn) = value
            End Set
        End Property
        
        Public Function IsM_Phan_LoaiNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Phan_LoaiColumn)
        End Function
        
        Public Sub SetM_Phan_LoaiNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Phan_LoaiColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsD_Phan_LoaiNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Phan_LoaiColumn)
        End Function
        
        Public Sub SetD_Phan_LoaiNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Phan_LoaiColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsM_Ton_Dau_KyNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Ton_Dau_KyColumn)
        End Function
        
        Public Sub SetM_Ton_Dau_KyNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Ton_Dau_KyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsD_Ton_Dau_KyNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Ton_Dau_KyColumn)
        End Function
        
        Public Sub SetD_Ton_Dau_KyNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Ton_Dau_KyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsM_Tong_So_DenNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Tong_So_DenColumn)
        End Function
        
        Public Sub SetM_Tong_So_DenNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Tong_So_DenColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsD_Tong_So_DenNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Tong_So_DenColumn)
        End Function
        
        Public Sub SetD_Tong_So_DenNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Tong_So_DenColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsM_Tong_So_DiNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Tong_So_DiColumn)
        End Function
        
        Public Sub SetM_Tong_So_DiNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Tong_So_DiColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsD_Tong_So_DiNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Tong_So_DiColumn)
        End Function
        
        Public Sub SetD_Tong_So_DiNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Tong_So_DiColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsM_Ton_Cuoi_KyNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Ton_Cuoi_KyColumn)
        End Function
        
        Public Sub SetM_Ton_Cuoi_KyNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.M_Ton_Cuoi_KyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsD_Ton_Cuoi_KyNull() As Boolean
            Return Me.IsNull(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Ton_Cuoi_KyColumn)
        End Function
        
        Public Sub SetD_Ton_Cuoi_KyNull()
            Me(Me.tableHuong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQ.D_Ton_Cuoi_KyColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As Huong_Di_Buu_Pham_Quoc_Te_Den_Bao_Cao_Tong_Hop_Ton_Toan_Bo_Kho_HQRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnMa_E1 As DataColumn
        
        Private columnMa_Nuoc As DataColumn
        
        Private columnPhan_Loai As DataColumn
        
        Private columnKhoi_Luong As DataColumn
        
        Private columnNgay_Dong As DataColumn
        
        Private columnTen_Duong_Thu_XND As DataColumn
        
        Private columnNgay_XND As DataColumn
        
        Private columnGio_XND As DataColumn
        
        Private columnNgay_Roi_HQ As DataColumn
        
        Private columnGio_Roi_HQ As DataColumn
        
        Friend Sub New()
            MyBase.New("Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property Ma_E1Column As DataColumn
            Get
                Return Me.columnMa_E1
            End Get
        End Property
        
        Friend ReadOnly Property Ma_NuocColumn As DataColumn
            Get
                Return Me.columnMa_Nuoc
            End Get
        End Property
        
        Friend ReadOnly Property Phan_LoaiColumn As DataColumn
            Get
                Return Me.columnPhan_Loai
            End Get
        End Property
        
        Friend ReadOnly Property Khoi_LuongColumn As DataColumn
            Get
                Return Me.columnKhoi_Luong
            End Get
        End Property
        
        Friend ReadOnly Property Ngay_DongColumn As DataColumn
            Get
                Return Me.columnNgay_Dong
            End Get
        End Property
        
        Friend ReadOnly Property Ten_Duong_Thu_XNDColumn As DataColumn
            Get
                Return Me.columnTen_Duong_Thu_XND
            End Get
        End Property
        
        Friend ReadOnly Property Ngay_XNDColumn As DataColumn
            Get
                Return Me.columnNgay_XND
            End Get
        End Property
        
        Friend ReadOnly Property Gio_XNDColumn As DataColumn
            Get
                Return Me.columnGio_XND
            End Get
        End Property
        
        Friend ReadOnly Property Ngay_Roi_HQColumn As DataColumn
            Get
                Return Me.columnNgay_Roi_HQ
            End Get
        End Property
        
        Friend ReadOnly Property Gio_Roi_HQColumn As DataColumn
            Get
                Return Me.columnGio_Roi_HQ
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow
            Get
                Return CType(Me.Rows(index),Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow)
            End Get
        End Property
        
        Public Event Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChanged As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEventHandler
        
        Public Event Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChanging As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEventHandler
        
        Public Event Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowDeleted As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEventHandler
        
        Public Event Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowDeleting As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEventHandler
        
        Public Overloads Sub AddDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow(ByVal row As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow(ByVal Ma_E1 As String, ByVal Ma_Nuoc As String, ByVal Phan_Loai As String, ByVal Khoi_Luong As Integer, ByVal Ngay_Dong As Integer, ByVal Ten_Duong_Thu_XND As String, ByVal Ngay_XND As Integer, ByVal Gio_XND As Integer, ByVal Ngay_Roi_HQ As Integer, ByVal Gio_Roi_HQ As Integer) As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow
            Dim rowDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow = CType(Me.NewRow,Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow)
            rowDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow.ItemArray = New Object() {Ma_E1, Ma_Nuoc, Phan_Loai, Khoi_Luong, Ngay_Dong, Ten_Duong_Thu_XND, Ngay_XND, Gio_XND, Ngay_Roi_HQ, Gio_Roi_HQ}
            Me.Rows.Add(rowDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow)
            Return rowDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable = CType(MyBase.Clone,Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnMa_E1 = Me.Columns("Ma_E1")
            Me.columnMa_Nuoc = Me.Columns("Ma_Nuoc")
            Me.columnPhan_Loai = Me.Columns("Phan_Loai")
            Me.columnKhoi_Luong = Me.Columns("Khoi_Luong")
            Me.columnNgay_Dong = Me.Columns("Ngay_Dong")
            Me.columnTen_Duong_Thu_XND = Me.Columns("Ten_Duong_Thu_XND")
            Me.columnNgay_XND = Me.Columns("Ngay_XND")
            Me.columnGio_XND = Me.Columns("Gio_XND")
            Me.columnNgay_Roi_HQ = Me.Columns("Ngay_Roi_HQ")
            Me.columnGio_Roi_HQ = Me.Columns("Gio_Roi_HQ")
        End Sub
        
        Private Sub InitClass()
            Me.columnMa_E1 = New DataColumn("Ma_E1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMa_E1)
            Me.columnMa_Nuoc = New DataColumn("Ma_Nuoc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMa_Nuoc)
            Me.columnPhan_Loai = New DataColumn("Phan_Loai", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPhan_Loai)
            Me.columnKhoi_Luong = New DataColumn("Khoi_Luong", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKhoi_Luong)
            Me.columnNgay_Dong = New DataColumn("Ngay_Dong", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNgay_Dong)
            Me.columnTen_Duong_Thu_XND = New DataColumn("Ten_Duong_Thu_XND", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTen_Duong_Thu_XND)
            Me.columnNgay_XND = New DataColumn("Ngay_XND", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNgay_XND)
            Me.columnGio_XND = New DataColumn("Gio_XND", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGio_XND)
            Me.columnNgay_Roi_HQ = New DataColumn("Ngay_Roi_HQ", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNgay_Roi_HQ)
            Me.columnGio_Roi_HQ = New DataColumn("Gio_Roi_HQ", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGio_Roi_HQ)
        End Sub
        
        Public Function NewDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow() As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow
            Return CType(Me.NewRow,Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangedEvent) Is Nothing) Then
                RaiseEvent Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChanged(Me, New Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEvent(CType(e.Row,Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangingEvent) Is Nothing) Then
                RaiseEvent Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChanging(Me, New Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEvent(CType(e.Row,Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowDeletedEvent) Is Nothing) Then
                RaiseEvent Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowDeleted(Me, New Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEvent(CType(e.Row,Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowDeletingEvent) Is Nothing) Then
                RaiseEvent Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowDeleting(Me, New Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEvent(CType(e.Row,Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow(ByVal row As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow
        Inherits DataRow
        
        Private tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan = CType(Me.Table,Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanDataTable)
        End Sub
        
        Public Property Ma_E1 As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ma_E1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ma_E1Column) = value
            End Set
        End Property
        
        Public Property Ma_Nuoc As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ma_NuocColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ma_NuocColumn) = value
            End Set
        End Property
        
        Public Property Phan_Loai As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Phan_LoaiColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Phan_LoaiColumn) = value
            End Set
        End Property
        
        Public Property Khoi_Luong As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Khoi_LuongColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Khoi_LuongColumn) = value
            End Set
        End Property
        
        Public Property Ngay_Dong As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_DongColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_DongColumn) = value
            End Set
        End Property
        
        Public Property Ten_Duong_Thu_XND As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ten_Duong_Thu_XNDColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ten_Duong_Thu_XNDColumn) = value
            End Set
        End Property
        
        Public Property Ngay_XND As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_XNDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_XNDColumn) = value
            End Set
        End Property
        
        Public Property Gio_XND As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Gio_XNDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Gio_XNDColumn) = value
            End Set
        End Property
        
        Public Property Ngay_Roi_HQ As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_Roi_HQColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_Roi_HQColumn) = value
            End Set
        End Property
        
        Public Property Gio_Roi_HQ As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Gio_Roi_HQColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Gio_Roi_HQColumn) = value
            End Set
        End Property
        
        Public Function IsMa_E1Null() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ma_E1Column)
        End Function
        
        Public Sub SetMa_E1Null()
            Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ma_E1Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsMa_NuocNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ma_NuocColumn)
        End Function
        
        Public Sub SetMa_NuocNull()
            Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ma_NuocColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPhan_LoaiNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Phan_LoaiColumn)
        End Function
        
        Public Sub SetPhan_LoaiNull()
            Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Phan_LoaiColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsKhoi_LuongNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Khoi_LuongColumn)
        End Function
        
        Public Sub SetKhoi_LuongNull()
            Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Khoi_LuongColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNgay_DongNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_DongColumn)
        End Function
        
        Public Sub SetNgay_DongNull()
            Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_DongColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTen_Duong_Thu_XNDNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ten_Duong_Thu_XNDColumn)
        End Function
        
        Public Sub SetTen_Duong_Thu_XNDNull()
            Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ten_Duong_Thu_XNDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNgay_XNDNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_XNDColumn)
        End Function
        
        Public Sub SetNgay_XNDNull()
            Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_XNDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsGio_XNDNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Gio_XNDColumn)
        End Function
        
        Public Sub SetGio_XNDNull()
            Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Gio_XNDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNgay_Roi_HQNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_Roi_HQColumn)
        End Function
        
        Public Sub SetNgay_Roi_HQNull()
            Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Ngay_Roi_HQColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsGio_Roi_HQNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Gio_Roi_HQColumn)
        End Function
        
        Public Sub SetGio_Roi_HQNull()
            Me(Me.tableDanh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_Quan.Gio_Roi_HQColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As Danh_Sach_Chi_Tiet_Bao_Cao_Quan_Ly_Kho_Hai_QuanRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
