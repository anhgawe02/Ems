'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2502
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dsQLTGND
    Inherits DataSet
    
    Private tableDanh_Sach_Tui_In_Nhan_E4_Label As Danh_Sach_Tui_In_Nhan_E4_LabelDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Danh_Sach_Tui_In_Nhan_E4_Label")) Is Nothing) Then
                Me.Tables.Add(New Danh_Sach_Tui_In_Nhan_E4_LabelDataTable(ds.Tables("Danh_Sach_Tui_In_Nhan_E4_Label")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Danh_Sach_Tui_In_Nhan_E4_Label As Danh_Sach_Tui_In_Nhan_E4_LabelDataTable
        Get
            Return Me.tableDanh_Sach_Tui_In_Nhan_E4_Label
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dsQLTGND = CType(MyBase.Clone,dsQLTGND)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("Danh_Sach_Tui_In_Nhan_E4_Label")) Is Nothing) Then
            Me.Tables.Add(New Danh_Sach_Tui_In_Nhan_E4_LabelDataTable(ds.Tables("Danh_Sach_Tui_In_Nhan_E4_Label")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableDanh_Sach_Tui_In_Nhan_E4_Label = CType(Me.Tables("Danh_Sach_Tui_In_Nhan_E4_Label"),Danh_Sach_Tui_In_Nhan_E4_LabelDataTable)
        If (Not (Me.tableDanh_Sach_Tui_In_Nhan_E4_Label) Is Nothing) Then
            Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dsQLTGND"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsQLTGND.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableDanh_Sach_Tui_In_Nhan_E4_Label = New Danh_Sach_Tui_In_Nhan_E4_LabelDataTable
        Me.Tables.Add(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label)
    End Sub
    
    Private Function ShouldSerializeDanh_Sach_Tui_In_Nhan_E4_Label() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEventHandler(ByVal sender As Object, ByVal e As Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Danh_Sach_Tui_In_Nhan_E4_LabelDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnSTT As DataColumn
        
        Private columnId_Tui_Thu As DataColumn
        
        Private columnNgay_Dong As DataColumn
        
        Private columnBuu_Cuc_Gui As DataColumn
        
        Private columnBuu_Cuc_Nhan As DataColumn
        
        Private columnSo_Chuyen_Thu As DataColumn
        
        Private columnTui_So As DataColumn
        
        Private columnTong_So_BP As DataColumn
        
        Private columnKhoi_Luong_BP As DataColumn
        
        Private columnTui_F As DataColumn
        
        Friend Sub New()
            MyBase.New("Danh_Sach_Tui_In_Nhan_E4_Label")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property STTColumn As DataColumn
            Get
                Return Me.columnSTT
            End Get
        End Property
        
        Friend ReadOnly Property Id_Tui_ThuColumn As DataColumn
            Get
                Return Me.columnId_Tui_Thu
            End Get
        End Property
        
        Friend ReadOnly Property Ngay_DongColumn As DataColumn
            Get
                Return Me.columnNgay_Dong
            End Get
        End Property
        
        Friend ReadOnly Property Buu_Cuc_GuiColumn As DataColumn
            Get
                Return Me.columnBuu_Cuc_Gui
            End Get
        End Property
        
        Friend ReadOnly Property Buu_Cuc_NhanColumn As DataColumn
            Get
                Return Me.columnBuu_Cuc_Nhan
            End Get
        End Property
        
        Friend ReadOnly Property So_Chuyen_ThuColumn As DataColumn
            Get
                Return Me.columnSo_Chuyen_Thu
            End Get
        End Property
        
        Friend ReadOnly Property Tui_SoColumn As DataColumn
            Get
                Return Me.columnTui_So
            End Get
        End Property
        
        Friend ReadOnly Property Tong_So_BPColumn As DataColumn
            Get
                Return Me.columnTong_So_BP
            End Get
        End Property
        
        Friend ReadOnly Property Khoi_Luong_BPColumn As DataColumn
            Get
                Return Me.columnKhoi_Luong_BP
            End Get
        End Property
        
        Friend ReadOnly Property Tui_FColumn As DataColumn
            Get
                Return Me.columnTui_F
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As Danh_Sach_Tui_In_Nhan_E4_LabelRow
            Get
                Return CType(Me.Rows(index),Danh_Sach_Tui_In_Nhan_E4_LabelRow)
            End Get
        End Property
        
        Public Event Danh_Sach_Tui_In_Nhan_E4_LabelRowChanged As Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEventHandler
        
        Public Event Danh_Sach_Tui_In_Nhan_E4_LabelRowChanging As Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEventHandler
        
        Public Event Danh_Sach_Tui_In_Nhan_E4_LabelRowDeleted As Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEventHandler
        
        Public Event Danh_Sach_Tui_In_Nhan_E4_LabelRowDeleting As Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEventHandler
        
        Public Overloads Sub AddDanh_Sach_Tui_In_Nhan_E4_LabelRow(ByVal row As Danh_Sach_Tui_In_Nhan_E4_LabelRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddDanh_Sach_Tui_In_Nhan_E4_LabelRow(ByVal STT As Integer, ByVal Id_Tui_Thu As String, ByVal Ngay_Dong As String, ByVal Buu_Cuc_Gui As String, ByVal Buu_Cuc_Nhan As String, ByVal So_Chuyen_Thu As String, ByVal Tui_So As String, ByVal Tong_So_BP As Integer, ByVal Khoi_Luong_BP As Integer, ByVal Tui_F As String) As Danh_Sach_Tui_In_Nhan_E4_LabelRow
            Dim rowDanh_Sach_Tui_In_Nhan_E4_LabelRow As Danh_Sach_Tui_In_Nhan_E4_LabelRow = CType(Me.NewRow,Danh_Sach_Tui_In_Nhan_E4_LabelRow)
            rowDanh_Sach_Tui_In_Nhan_E4_LabelRow.ItemArray = New Object() {STT, Id_Tui_Thu, Ngay_Dong, Buu_Cuc_Gui, Buu_Cuc_Nhan, So_Chuyen_Thu, Tui_So, Tong_So_BP, Khoi_Luong_BP, Tui_F}
            Me.Rows.Add(rowDanh_Sach_Tui_In_Nhan_E4_LabelRow)
            Return rowDanh_Sach_Tui_In_Nhan_E4_LabelRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As Danh_Sach_Tui_In_Nhan_E4_LabelDataTable = CType(MyBase.Clone,Danh_Sach_Tui_In_Nhan_E4_LabelDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New Danh_Sach_Tui_In_Nhan_E4_LabelDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnSTT = Me.Columns("STT")
            Me.columnId_Tui_Thu = Me.Columns("Id_Tui_Thu")
            Me.columnNgay_Dong = Me.Columns("Ngay_Dong")
            Me.columnBuu_Cuc_Gui = Me.Columns("Buu_Cuc_Gui")
            Me.columnBuu_Cuc_Nhan = Me.Columns("Buu_Cuc_Nhan")
            Me.columnSo_Chuyen_Thu = Me.Columns("So_Chuyen_Thu")
            Me.columnTui_So = Me.Columns("Tui_So")
            Me.columnTong_So_BP = Me.Columns("Tong_So_BP")
            Me.columnKhoi_Luong_BP = Me.Columns("Khoi_Luong_BP")
            Me.columnTui_F = Me.Columns("Tui_F")
        End Sub
        
        Private Sub InitClass()
            Me.columnSTT = New DataColumn("STT", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSTT)
            Me.columnId_Tui_Thu = New DataColumn("Id_Tui_Thu", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnId_Tui_Thu)
            Me.columnNgay_Dong = New DataColumn("Ngay_Dong", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNgay_Dong)
            Me.columnBuu_Cuc_Gui = New DataColumn("Buu_Cuc_Gui", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBuu_Cuc_Gui)
            Me.columnBuu_Cuc_Nhan = New DataColumn("Buu_Cuc_Nhan", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBuu_Cuc_Nhan)
            Me.columnSo_Chuyen_Thu = New DataColumn("So_Chuyen_Thu", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSo_Chuyen_Thu)
            Me.columnTui_So = New DataColumn("Tui_So", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTui_So)
            Me.columnTong_So_BP = New DataColumn("Tong_So_BP", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTong_So_BP)
            Me.columnKhoi_Luong_BP = New DataColumn("Khoi_Luong_BP", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKhoi_Luong_BP)
            Me.columnTui_F = New DataColumn("Tui_F", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTui_F)
        End Sub
        
        Public Function NewDanh_Sach_Tui_In_Nhan_E4_LabelRow() As Danh_Sach_Tui_In_Nhan_E4_LabelRow
            Return CType(Me.NewRow,Danh_Sach_Tui_In_Nhan_E4_LabelRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New Danh_Sach_Tui_In_Nhan_E4_LabelRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(Danh_Sach_Tui_In_Nhan_E4_LabelRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Danh_Sach_Tui_In_Nhan_E4_LabelRowChangedEvent) Is Nothing) Then
                RaiseEvent Danh_Sach_Tui_In_Nhan_E4_LabelRowChanged(Me, New Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEvent(CType(e.Row,Danh_Sach_Tui_In_Nhan_E4_LabelRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Danh_Sach_Tui_In_Nhan_E4_LabelRowChangingEvent) Is Nothing) Then
                RaiseEvent Danh_Sach_Tui_In_Nhan_E4_LabelRowChanging(Me, New Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEvent(CType(e.Row,Danh_Sach_Tui_In_Nhan_E4_LabelRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Danh_Sach_Tui_In_Nhan_E4_LabelRowDeletedEvent) Is Nothing) Then
                RaiseEvent Danh_Sach_Tui_In_Nhan_E4_LabelRowDeleted(Me, New Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEvent(CType(e.Row,Danh_Sach_Tui_In_Nhan_E4_LabelRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Danh_Sach_Tui_In_Nhan_E4_LabelRowDeletingEvent) Is Nothing) Then
                RaiseEvent Danh_Sach_Tui_In_Nhan_E4_LabelRowDeleting(Me, New Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEvent(CType(e.Row,Danh_Sach_Tui_In_Nhan_E4_LabelRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveDanh_Sach_Tui_In_Nhan_E4_LabelRow(ByVal row As Danh_Sach_Tui_In_Nhan_E4_LabelRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Danh_Sach_Tui_In_Nhan_E4_LabelRow
        Inherits DataRow
        
        Private tableDanh_Sach_Tui_In_Nhan_E4_Label As Danh_Sach_Tui_In_Nhan_E4_LabelDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableDanh_Sach_Tui_In_Nhan_E4_Label = CType(Me.Table,Danh_Sach_Tui_In_Nhan_E4_LabelDataTable)
        End Sub
        
        Public Property STT As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.STTColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.STTColumn) = value
            End Set
        End Property
        
        Public Property Id_Tui_Thu As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Id_Tui_ThuColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Id_Tui_ThuColumn) = value
            End Set
        End Property
        
        Public Property Ngay_Dong As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Ngay_DongColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Ngay_DongColumn) = value
            End Set
        End Property
        
        Public Property Buu_Cuc_Gui As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Buu_Cuc_GuiColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Buu_Cuc_GuiColumn) = value
            End Set
        End Property
        
        Public Property Buu_Cuc_Nhan As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Buu_Cuc_NhanColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Buu_Cuc_NhanColumn) = value
            End Set
        End Property
        
        Public Property So_Chuyen_Thu As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.So_Chuyen_ThuColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.So_Chuyen_ThuColumn) = value
            End Set
        End Property
        
        Public Property Tui_So As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tui_SoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tui_SoColumn) = value
            End Set
        End Property
        
        Public Property Tong_So_BP As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tong_So_BPColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tong_So_BPColumn) = value
            End Set
        End Property
        
        Public Property Khoi_Luong_BP As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Khoi_Luong_BPColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Khoi_Luong_BPColumn) = value
            End Set
        End Property
        
        Public Property Tui_F As String
            Get
                Try 
                    Return CType(Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tui_FColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tui_FColumn) = value
            End Set
        End Property
        
        Public Function IsSTTNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.STTColumn)
        End Function
        
        Public Sub SetSTTNull()
            Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.STTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsId_Tui_ThuNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Id_Tui_ThuColumn)
        End Function
        
        Public Sub SetId_Tui_ThuNull()
            Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Id_Tui_ThuColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNgay_DongNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Ngay_DongColumn)
        End Function
        
        Public Sub SetNgay_DongNull()
            Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Ngay_DongColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsBuu_Cuc_GuiNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Buu_Cuc_GuiColumn)
        End Function
        
        Public Sub SetBuu_Cuc_GuiNull()
            Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Buu_Cuc_GuiColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsBuu_Cuc_NhanNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Buu_Cuc_NhanColumn)
        End Function
        
        Public Sub SetBuu_Cuc_NhanNull()
            Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Buu_Cuc_NhanColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSo_Chuyen_ThuNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.So_Chuyen_ThuColumn)
        End Function
        
        Public Sub SetSo_Chuyen_ThuNull()
            Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.So_Chuyen_ThuColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTui_SoNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tui_SoColumn)
        End Function
        
        Public Sub SetTui_SoNull()
            Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tui_SoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTong_So_BPNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tong_So_BPColumn)
        End Function
        
        Public Sub SetTong_So_BPNull()
            Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tong_So_BPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsKhoi_Luong_BPNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Khoi_Luong_BPColumn)
        End Function
        
        Public Sub SetKhoi_Luong_BPNull()
            Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Khoi_Luong_BPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTui_FNull() As Boolean
            Return Me.IsNull(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tui_FColumn)
        End Function
        
        Public Sub SetTui_FNull()
            Me(Me.tableDanh_Sach_Tui_In_Nhan_E4_Label.Tui_FColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class Danh_Sach_Tui_In_Nhan_E4_LabelRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As Danh_Sach_Tui_In_Nhan_E4_LabelRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As Danh_Sach_Tui_In_Nhan_E4_LabelRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As Danh_Sach_Tui_In_Nhan_E4_LabelRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
